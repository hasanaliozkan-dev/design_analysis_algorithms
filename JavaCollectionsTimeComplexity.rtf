{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c99985;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \cb3 Below are the Big O performance of common functions of different Java Collections.\
\
\
List                 | Add  | Remove | Get  | Contains | Next | Data Structure\
---------------------|------|--------|------|----------|------|---------------\
ArrayList            | O(1) |  O(n)  | O(1) |   O(n)   | O(1) | Array\
LinkedList           | O(1) |  O(1)  | O(n) |   O(n)   | O(1) | Linked List\
CopyOnWriteArrayList | O(n) |  O(n)  | O(1) |   O(n)   | O(1) | Array\
\
\
\
Set                   |    Add   |  Remove  | Contains |   Next   | Size | Data Structure\
----------------------|----------|----------|----------|----------|------|-------------------------\
HashSet               | O(1)     | O(1)     | O(1)     | O(h/n)   | O(1) | Hash Table\
LinkedHashSet         | O(1)     | O(1)     | O(1)     | O(1)     | O(1) | Hash Table + Linked List\
EnumSet               | O(1)     | O(1)     | O(1)     | O(1)     | O(1) | Bit Vector\
TreeSet               | O(log n) | O(log n) | O(log n) | O(log n) | O(1) | Red-black tree\
CopyOnWriteArraySet   | O(n)     | O(n)     | O(n)     | O(1)     | O(1) | Array\
ConcurrentSkipListSet | O(log n) | O(log n) | O(log n) | O(1)     | O(n) | Skip List\
\
\
\
Queue                   |  Offer   | Peak |   Poll   | Remove | Size | Data Structure\
------------------------|----------|------|----------|--------|------|---------------\
PriorityQueue           | O(log n) | O(1) | O(log n) |  O(n)  | O(1) | Priority Heap\
LinkedList              | O(1)     | O(1) | O(1)     |  O(1)  | O(1) | Array\
ArrayDequeue            | O(1)     | O(1) | O(1)     |  O(n)  | O(1) | Linked List\
ConcurrentLinkedQueue   | O(1)     | O(1) | O(1)     |  O(n)  | O(n) | Linked List\
ArrayBlockingQueue      | O(1)     | O(1) | O(1)     |  O(n)  | O(1) | Array\
PriorirityBlockingQueue | O(log n) | O(1) | O(log n) |  O(n)  | O(1) | Priority Heap\
SynchronousQueue        | O(1)     | O(1) | O(1)     |  O(n)  | O(1) | None!\
DelayQueue              | O(log n) | O(1) | O(log n) |  O(n)  | O(1) | Priority Heap\
LinkedBlockingQueue     | O(1)     | O(1) | O(1)     |  O(n)  | O(1) | Linked List\
\
\
\
Map                   |   Get    | ContainsKey |   Next   | Data Structure\
----------------------|----------|-------------|----------|-------------------------\
HashMap               | O(1)     |   O(1)      | O(h / n) | Hash Table\
LinkedHashMap         | O(1)     |   O(1)      | O(1)     | Hash Table + Linked List\
IdentityHashMap       | O(1)     |   O(1)      | O(h / n) | Array\
WeakHashMap           | O(1)     |   O(1)      | O(h / n) | Hash Table\
EnumMap               | O(1)     |   O(1)      | O(1)     | Array\
TreeMap               | O(log n) |   O(log n)  | O(log n) | Red-black tree\
ConcurrentHashMap     | O(1)     |   O(1)      | O(h / n) | Hash Tables\
ConcurrentSkipListMap | O(log n) |   O(log n)  | O(1)     | Skip List\
\
}